// Code generated by MockGen. DO NOT EDIT.
// Source: internal/auth/tokens_repo.go

// Package auth is a generated GoMock package.
package auth

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTokensRepo is a mock of TokensRepo interface
type MockTokensRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTokensRepoMockRecorder
}

// MockTokensRepoMockRecorder is the mock recorder for MockTokensRepo
type MockTokensRepoMockRecorder struct {
	mock *MockTokensRepo
}

// NewMockTokensRepo creates a new mock instance
func NewMockTokensRepo(ctrl *gomock.Controller) *MockTokensRepo {
	mock := &MockTokensRepo{ctrl: ctrl}
	mock.recorder = &MockTokensRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokensRepo) EXPECT() *MockTokensRepoMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockTokensRepo) Create(arg0 Token) (Token, error) {
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockTokensRepoMockRecorder) Create(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTokensRepo)(nil).Create), arg0)
}

// Delete mocks base method
func (m *MockTokensRepo) Delete(arg0 Token) error {
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockTokensRepoMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTokensRepo)(nil).Delete), arg0)
}
